@using EmployeeTable.Models.Entities
@model EmployeeTable.Models.Entities.Employee

@{
    ViewBag.Title = "Add";
}

<h2>Add New Emp</h2>      
       

@using (Html.BeginForm())           
{
    <div>
        @Html.LabelFor(e => e.Id)
        @Html.TextBoxFor(e=>e.Id,  new { @class = "form-control"})   <!-- i want to style my text box with a class of cs bootstrap-->
        <!-- so, i use At because there's a reserved word called class in c#--> 
        @Html.ValidationMessageFor(e=>e.Id) 
   
    </div>                                                     
     
    
    <div>
        @Html.LabelFor(e=>e.Name)
        @Html.TextBoxFor(e=>e.Name, new { @class = "form-control" })  
        @Html.ValidationMessageFor(e=>e.Name)
    </div>   
    
    <div>
        @Html.LabelFor(e=>e.Age)
        @Html.TextBoxFor(e=>e.Age, new { @class = "form-control" })  
        @Html.ValidationMessageFor(e=>e.Age)
    </div>    
    
    
    <div>
        @Html.LabelFor(e => e.Gender)
        @Html.DropDownListFor(e => e.Gender, new List<SelectListItem>()      // this fucking DropDownList takes a List of type <SelectListItem>
        {
            new SelectListItem()                               // now i need to add the SelectListItem
            {
                Text = Gender.Male.ToString(),
                Value = Gender.Male.ToString()
            } ,

            new SelectListItem()
            {
                Text = Gender.Female.ToString(),
                Value = Gender.Female.ToString()
            }
        }      
            
            , "Select Gender" , new {@class="form-control"}


            )
        @Html.ValidationMessageFor(e => e.Gender)
    </div>
    

    <br/>
    <div> <input type="submit" value="Add" class="btn btn-primary" /> </div>
}



