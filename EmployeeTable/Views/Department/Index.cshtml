@model List<EmployeeTable.Models.Entities.Department>
        
@{
    ViewBag.Title = "Departments List";
}


<h2>List of Departments</h2>
                            

@Html.ActionLink("+ Add a new Department", "Add")

<table class="table table-bordered">
    <thead>
    <tr>
        <th>ID</th>
        <th>Name</th>
           <th></th>

    </tr>
    </thead>


    <tbody>
    @foreach (var e in Model)
    {
        <tr id="id-@e.Id">      <!--  i want to catch the fields for specific department by ID while iterating them in rendering-->  
                                 <!-- this will help me in Single Page application, so using JS i can catch and render something without refresh-->

            <td>@e.Id</td>
            <td>@e.Name</td>
            
            <td>                  
                            <!--text name     Action        -->
                @Html.ActionLink("Edit", "Edit", new { id = e.Id }) |  <!-- property called id "matches the route" == mode.Id-->
                                                       
                @Html.ActionLink("Inline Edit", "InlineEdit", new { id = e.Id }) |

                <a class="btn btn-link" onclick="deptDelete(@e.Id)">Delete</a>
            </td>



        </tr>
    }


    </tbody>


</table>
                                        


<script src="/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script>
        function deptDelete(id) {
            var result = confirm("Confirm the Delete Process ?");

            if (result) {

                //    window.location.replace("/Department/Delete/"+id);


                // USING AJAX instead of JS Vanilla

                $.ajax({
                    url: `/department/delete/${id}`,
                    type: "GET",
                    success: function(data) {    // data holds the return of the Action "Delete"
                        alert("deleted");


                        //location.reload();        // when i used the normal javascript, i called location.replace(url) 
                        //                            // instead, i can use MVC AJAX "which i don't know it yet"
                        // or use JavaScript to manipulate the DOM ( min 11:00 in the video of Osama

                        if (data) //if the returned from the action delete is true
                        {
                            let ele = document.getElementById(`id-${id}`);
                            ele.remove();
                        }


                    } ,
                    error: function(err) {
                        alert("error");
                    }
                });


            }
        }


    </script>

